path: "tensorflow.keras.__internal__.KerasTensor"
tf_class {
  is_instance: "<class \'keras.engine.keras_tensor.KerasTensor\'>"
  is_instance: "<type \'object\'>"
  member {
    name: "dtype"
    mtype: "<type \'property\'>"
  }
  member {
    name: "is_tensor_like"
    mtype: "<type \'property\'>"
  }
  member {
    name: "name"
    mtype: "<type \'property\'>"
  }
  member {
    name: "node"
    mtype: "<type \'property\'>"
  }
  member {
    name: "op"
    mtype: "<type \'property\'>"
  }
  member {
    name: "shape"
    mtype: "<type \'property\'>"
  }
  member {
    name: "type_spec"
    mtype: "<type \'property\'>"
  }
  member_method {
    name: "__init__"
    argspec: "args=[\'self\', \'type_spec\', \'inferred_value\', \'name\'], varargs=None, keywords=None, defaults=[\'None\', \'None\'], "
  }
  member_method {
    name: "experimental_ref"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_tensor"
    argspec: "args=[\'cls\', \'tensor\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "from_type_spec"
    argspec: "args=[\'cls\', \'type_spec\', \'name\'], varargs=None, keywords=None, defaults=[\'None\'], "
  }
  member_method {
    name: "get_shape"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "ref"
    argspec: "args=[\'self\'], varargs=None, keywords=None, defaults=None"
  }
  member_method {
    name: "set_shape"
    argspec: "args=[\'self\', \'shape\'], varargs=None, keywords=None, defaults=None"
  }
}
