Analyze the API and generate the yaml file like above yaml directly.
tf.nn.embedding_lookup(
    params, ids, max_norm=None, name=None
)
  Args:
    params: A single tensor representing the complete embedding tensor, or a
      list of tensors all of same shape except for the first dimension,
      representing sharded embedding tensors following "div" partition strategy.
    ids: A `Tensor` with type `int32` or `int64` containing the ids to be looked
      up in `params`.
    max_norm: If not `None`, each embedding is clipped if its l2-norm is larger
      than this value.
    name: A name for the operation (optional).
  Returns:
    A `Tensor` with the same type as the tensors in `params`.
    For instance, if `params` is a 5x2 matrix:
    ```python
    [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]
    ```
    or a list of matrices:
    ```python
    params[0]: [[1, 2], [3, 4]]
    params[1]: [[5, 6], [7, 8]]
    params[2]: [[9, 10]]
    ```
    and `ids` is:
    ```python
    [0, 3, 4]
    ```
    The output will be a 3x2 matrix:
    ```python
    [[1, 2], [7, 8], [9, 10]]
    ```
  Raises:
    ValueError: If `params` is empty.
